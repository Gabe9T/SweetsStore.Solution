@using SweetStore.ViewModels

@model RegisterViewModel
<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <h2>Register A New User</h2>
            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger">
                    <p>Please fix the following error(s) and then resubmit the form:</p>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                </div>
            }

            <form asp-action="Register" asp-controller="Account" method="post" class="needs-validation" novalidate>
                <div class="mb-3">
                    <label asp-for="Email" class="form-label"></label>
                    <input asp-for="Email" class="form-control" required />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="Password" class="form-label"></label>
                    <input asp-for="Password" type="password" class="form-control" required />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="ConfirmPassword" class="form-label"></label>
                    <input asp-for="ConfirmPassword" type="password" class="form-control" required />
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>

                <button type="submit" class="btn btn-primary">Register</button>
                <hr />
            </form>
            <a asp-action="Index" asp-controller="Treats" class="btn btn-secondary">Browse Treats</a>
        </div>
    </div>
</div>